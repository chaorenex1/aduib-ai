"""4

Revision ID: 499d62ab5fa2
Revises: edf72bdc03e1
Create Date: 2025-08-30 15:57:49.621808

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '499d62ab5fa2'
down_revision: Union[str, None] = 'edf72bdc03e1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mcp_server',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('server_code', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', name='mcp_server_status'), nullable=False),
    sa.Column('parameters', sa.Text(), nullable=True, comment='tool parameters'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='tool create time'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='tool update time'),
    sa.Column('deleted', sa.Integer(), nullable=True, comment='tool delete flag'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('server_code')
    )
    op.create_index(op.f('ix_mcp_server_name'), 'mcp_server', ['name'], unique=False)
    op.alter_column('conversation_message', 'usage',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_comment='message usage information',
               existing_nullable=True)
    op.alter_column('model', 'feature',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_comment='Model Feature',
               existing_nullable=True)
    op.alter_column('model', 'model_params',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_comment='Model Params',
               existing_nullable=True)
    op.alter_column('provider', 'support_model_type',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_comment='Supported Model',
               existing_nullable=False)
    op.alter_column('provider', 'provider_config',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_comment='Provider Config',
               existing_nullable=False)
    op.add_column('tool_call_result', sa.Column('tool_id', sa.UUID(), nullable=True, comment='tool id'))
    op.alter_column('tool_call_result', 'tool_call',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_comment='tool calls',
               existing_nullable=True)
    op.alter_column('tool_call_result', 'result',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_comment='tool call result',
               existing_nullable=True)
    op.create_index(op.f('ix_tool_call_result_tool_id'), 'tool_call_result', ['tool_id'], unique=False)
    op.create_foreign_key(None, 'tool_call_result', 'tool_info', ['tool_id'], ['id'])
    op.alter_column('tool_info', 'parameters',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_comment='tool parameters schema',
               existing_nullable=True)
    op.alter_column('tool_info', 'configs',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_comment='tool configurations',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tool_info', 'configs',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_comment='tool configurations',
               existing_nullable=True)
    op.alter_column('tool_info', 'parameters',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_comment='tool parameters schema',
               existing_nullable=True)
    op.drop_constraint(None, 'tool_call_result', type_='foreignkey')
    op.drop_index(op.f('ix_tool_call_result_tool_id'), table_name='tool_call_result')
    op.alter_column('tool_call_result', 'result',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_comment='tool call result',
               existing_nullable=True)
    op.alter_column('tool_call_result', 'tool_call',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_comment='tool calls',
               existing_nullable=True)
    op.drop_column('tool_call_result', 'tool_id')
    op.alter_column('provider', 'provider_config',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_comment='Provider Config',
               existing_nullable=False)
    op.alter_column('provider', 'support_model_type',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_comment='Supported Model',
               existing_nullable=False)
    op.alter_column('model', 'model_params',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_comment='Model Params',
               existing_nullable=True)
    op.alter_column('model', 'feature',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_comment='Model Feature',
               existing_nullable=True)
    op.alter_column('conversation_message', 'usage',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_comment='message usage information',
               existing_nullable=True)
    op.drop_index(op.f('ix_mcp_server_name'), table_name='mcp_server')
    op.drop_table('mcp_server')
    # ### end Alembic commands ###
