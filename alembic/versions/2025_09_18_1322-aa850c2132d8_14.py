"""14

Revision ID: aa850c2132d8
Revises: 045789223308
Create Date: 2025-09-18 13:22:23.430639

"""
from typing import Sequence, Union

from alembic import op
import models as models
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aa850c2132d8'
down_revision: Union[str, None] = '045789223308'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('knowledge_base',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False, comment='id'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='create time'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='update time'),
    sa.Column('deleted', sa.Integer(), nullable=True, comment='delete flag'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='name'),
    sa.Column('rag_type', sa.String(), nullable=False, comment='rag type'),
    sa.Column('data_process_rule', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='data process rule'),
    sa.Column('embedding_model', sa.String(length=255), nullable=False, comment='embedding model name'),
    sa.Column('embedding_model_provider', sa.String(length=255), nullable=False, comment='embedding provider name'),
    sa.Column('rerank_model', sa.String(length=255), server_default=sa.text("''"), nullable=True, comment='rerank model name'),
    sa.Column('rerank_model_provider', sa.String(length=255), server_default=sa.text("''"), nullable=True, comment='rerank provider name'),
    sa.Column('reranking_rule', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'"), nullable=True, comment='reranking rule'),
    sa.Column('word_count', sa.Integer(), server_default=sa.text('0'), nullable=True, comment='word count'),
    sa.Column('token_count', sa.Integer(), server_default=sa.text('0'), nullable=True, comment='token count'),
    sa.Column('default_base', sa.Integer(), server_default=sa.text('0'), nullable=True, comment='default knowledge base'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_base_rag_type'), 'knowledge_base', ['rag_type'], unique=False)
    op.add_column('conversation_message', sa.Column('extracted_state', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='message extracted state'))
    op.add_column('knowledge_document', sa.Column('knowledge_base_id', sa.UUID(), nullable=False, comment='knowledge_base_id'))
    op.add_column('knowledge_document', sa.Column('title', sa.String(length=255), nullable=False, comment='name'))
    op.add_column('knowledge_document', sa.Column('content', sa.TEXT(), server_default=sa.text("''"), nullable=False, comment='content'))
    op.add_column('knowledge_document', sa.Column('doc_language', sa.String(length=50), nullable=False, comment='knowledge language'))
    op.add_column('knowledge_document', sa.Column('doc_from', sa.String(length=255), server_default=sa.text("''"), nullable=True, comment='document from'))
    op.add_column('knowledge_document', sa.Column('data_source_type', sa.String(), nullable=False, comment='data source type'))
    op.drop_index(op.f('ix_knowledge_document_date_source_type'), table_name='knowledge_document')
    op.create_index('idx_knowledge_document_content', 'knowledge_document', [sa.literal_column("to_tsvector('jieba_cfg', content)")], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_knowledge_document_data_source_type'), 'knowledge_document', ['data_source_type'], unique=False)
    op.create_index(op.f('ix_knowledge_document_knowledge_base_id'), 'knowledge_document', ['knowledge_base_id'], unique=False)
    op.drop_column('knowledge_document', 'date_source_type')
    op.drop_column('knowledge_document', 'knowledge_language')
    op.drop_column('knowledge_document', 'embedding_model')
    op.drop_column('knowledge_document', 'data_process_rule')
    op.drop_column('knowledge_document', 'name')
    op.drop_column('knowledge_document', 'embedding_model_provider')
    op.add_column('knowledge_embeddings', sa.Column('knowledge_base_id', sa.UUID(), nullable=False, comment='knowledge_base_id'))
    op.add_column('knowledge_embeddings', sa.Column('document_id', sa.UUID(), nullable=False, comment='document_id'))
    op.drop_index(op.f('ix_knowledge_embeddings_knowledge_id'), table_name='knowledge_embeddings')
    op.create_index(op.f('ix_knowledge_embeddings_document_id'), 'knowledge_embeddings', ['document_id'], unique=False)
    op.create_index(op.f('ix_knowledge_embeddings_knowledge_base_id'), 'knowledge_embeddings', ['knowledge_base_id'], unique=False)
    op.drop_column('knowledge_embeddings', 'knowledge_id')
    op.add_column('knowledge_keywords', sa.Column('knowledge_id', sa.UUID(), nullable=False, comment='knowledge_id'))
    op.add_column('knowledge_keywords', sa.Column('document_id', sa.UUID(), nullable=False, comment='doc_id'))
    op.drop_index(op.f('ix_knowledge_keywords_doc_id'), table_name='knowledge_keywords')
    op.create_index(op.f('ix_knowledge_keywords_document_id'), 'knowledge_keywords', ['document_id'], unique=False)
    op.create_index(op.f('ix_knowledge_keywords_knowledge_id'), 'knowledge_keywords', ['knowledge_id'], unique=False)
    op.drop_column('knowledge_keywords', 'doc_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('knowledge_keywords', sa.Column('doc_id', sa.UUID(), autoincrement=False, nullable=False, comment='doc_id'))
    op.drop_index(op.f('ix_knowledge_keywords_knowledge_id'), table_name='knowledge_keywords')
    op.drop_index(op.f('ix_knowledge_keywords_document_id'), table_name='knowledge_keywords')
    op.create_index(op.f('ix_knowledge_keywords_doc_id'), 'knowledge_keywords', ['doc_id'], unique=False)
    op.drop_column('knowledge_keywords', 'document_id')
    op.drop_column('knowledge_keywords', 'knowledge_id')
    op.add_column('knowledge_embeddings', sa.Column('knowledge_id', sa.UUID(), autoincrement=False, nullable=False, comment='knowledge_id'))
    op.drop_index(op.f('ix_knowledge_embeddings_knowledge_base_id'), table_name='knowledge_embeddings')
    op.drop_index(op.f('ix_knowledge_embeddings_document_id'), table_name='knowledge_embeddings')
    op.create_index(op.f('ix_knowledge_embeddings_knowledge_id'), 'knowledge_embeddings', ['knowledge_id'], unique=False)
    op.drop_column('knowledge_embeddings', 'document_id')
    op.drop_column('knowledge_embeddings', 'knowledge_base_id')
    op.add_column('knowledge_document', sa.Column('embedding_model_provider', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='embedding provider name'))
    op.add_column('knowledge_document', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='name'))
    op.add_column('knowledge_document', sa.Column('data_process_rule', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='data process rule'))
    op.add_column('knowledge_document', sa.Column('embedding_model', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='embedding model name'))
    op.add_column('knowledge_document', sa.Column('knowledge_language', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='knowledge language'))
    op.add_column('knowledge_document', sa.Column('date_source_type', sa.VARCHAR(), autoincrement=False, nullable=False, comment='data source type'))
    op.drop_index(op.f('ix_knowledge_document_knowledge_base_id'), table_name='knowledge_document')
    op.drop_index(op.f('ix_knowledge_document_data_source_type'), table_name='knowledge_document')
    op.drop_index('idx_knowledge_document_content', table_name='knowledge_document', postgresql_using='gin')
    op.create_index(op.f('ix_knowledge_document_date_source_type'), 'knowledge_document', ['date_source_type'], unique=False)
    op.drop_column('knowledge_document', 'data_source_type')
    op.drop_column('knowledge_document', 'doc_from')
    op.drop_column('knowledge_document', 'doc_language')
    op.drop_column('knowledge_document', 'content')
    op.drop_column('knowledge_document', 'title')
    op.drop_column('knowledge_document', 'knowledge_base_id')
    op.drop_column('conversation_message', 'extracted_state')
    op.drop_index(op.f('ix_knowledge_base_rag_type'), table_name='knowledge_base')
    op.drop_table('knowledge_base')
    # ### end Alembic commands ###
